{"version":3,"sources":["pages/Home.tsx","store/reducers/theme.ts","store/index.ts","components/SwitchThemeMode.tsx","components/Navbar.tsx","components/Copyright.tsx","components/QRCodeScanner.tsx","components/ModalBarcodeScanner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","EThemeMode","initialState","mode","DARK","state","createSlice","name","reducers","setMode","action","payload","store","configureStore","reducer","theme","actions","useAppSelector","useSelector","MaterialUISwitch","styled","Switch","width","height","padding","margin","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","SwitchThemeMode","dispatch","useDispatch","checked","onClick","LIGHT","NavBar","Box","sx","flexGrow","AppBar","Toolbar","IconButton","size","edge","aria-label","mr","className","Typography","variant","component","Button","Copyright","props","align","Link","href","Date","getFullYear","QRCodeScanner","onUpdate","useEffect","html5QrcodeScanner","Html5Qrcode","getCameras","then","devices","length","cameraId","id","start","fps","qrbox","qrCodeMessage","result","console","log","undefined","catch","err","error","stop","ignore","style","ModalBarcodeScanner","useState","code","setCode","Dialog","open","onClose","DialogTitle","decodedText","DialogContent","TextField","value","onChange","e","target","label","type","fullWidth","DialogActions","App","barcodeScanner","setBarcodeScanner","React","useMemo","createTheme","ThemeProvider","SpeedDial","ariaLabel","bottom","right","icon","grey","overflow","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fc698aa.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Home () {\n    return <div/>\n}\n\nexport default Home;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {SliceCaseReducers} from \"@reduxjs/toolkit/src/createSlice\";\n\nexport enum EThemeMode {\n    DARK=\"dark\",\n    LIGHT=\"light\"\n}\n\nexport type TTheme = {\n    mode : EThemeMode\n}\n\nexport const initialState: TTheme = {\n    mode: EThemeMode.DARK\n}\n\nexport  const state = createSlice({\n    name: \"config\",\n    initialState,\n    reducers: {\n        setMode : (state, action:PayloadAction<EThemeMode>) => ({\n            ...state,\n            mode: action.payload\n        })\n    }\n})\n\nexport default state;\n\n\n\n","import { Action, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport theme from './reducers/theme';\n\nexport const store = configureStore({\n    reducer: {\n        theme: theme.reducer,\n    },\n});\n\nexport const actions = {\n    theme: theme.actions\n}\n\ntype AppDispatch = typeof store.dispatch;\ntype RootState = ReturnType<typeof store.getState>;\n//type AppThunk<ReturnType = void> = ThunkAction<\n//    ReturnType,\n//    RootState,\n//    unknown,\n//    Action<string>\n//    >;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\nexport default store;\n","import * as React from 'react';\nimport {styled} from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport {actions, useAppDispatch, useAppSelector} from \"../store\";\nimport {EThemeMode} from \"../store/reducers/theme\";\n\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\n    width: 62,\n    height: 34,\n    padding: 7,\n    '& .MuiSwitch-switchBase': {\n        margin: 1,\n        padding: 0,\n        transform: 'translateX(6px)',\n        '&.Mui-checked': {\n            color: '#fff',\n            transform: 'translateX(22px)',\n            '& .MuiSwitch-thumb:before': {\n                backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n                    '#fff',\n                )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n            },\n            '& + .MuiSwitch-track': {\n                opacity: 1,\n                backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n            },\n        },\n    },\n    '& .MuiSwitch-thumb': {\n        backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n        width: 32,\n        height: 32,\n        '&:before': {\n            content: \"''\",\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            left: 0,\n            top: 0,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n                '#fff',\n            )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n        },\n    },\n    '& .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n        borderRadius: 20 / 2,\n    },\n}));\n\nexport default function SwitchThemeMode () {\n    const mode = useAppSelector(state => state.theme.mode);\n    const  dispatch = useAppDispatch();\n    return <MaterialUISwitch checked={mode === EThemeMode.DARK} onClick={() => {\n        dispatch(actions.theme.setMode(mode === EThemeMode.DARK ? EThemeMode.LIGHT : EThemeMode.DARK))\n    }}/>\n}","import {AppBar, Box, Button, IconButton, Toolbar, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport SwitchThemeMode from \"./SwitchThemeMode\";\n\n\n\n\nfunction NavBar() {\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        sx={{ mr: 2 }}\n                    >\n                        <span className=\"fa-duotone fa-bars\"/>\n                    </IconButton>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        Yato Manager\n                    </Typography>\n                    <SwitchThemeMode/>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n\nexport default NavBar;","import Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport * as React from \"react\";\n\nfunction Copyright(props: any) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://www.yatoacquari.it/\">\n                Yato Acquari\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\nexport default Copyright;","import React, {useEffect, useMemo} from \"react\";\nimport {Html5Qrcode} from \"html5-qrcode\";\nimport {Result} from \"@zxing/library\";\nimport {Html5QrcodeResult, QrcodeSuccessCallback} from \"html5-qrcode/core\";\n\ntype TProps = {\n    onUpdate?: QrcodeSuccessCallback;\n}\n\nfunction QRCodeScanner ({onUpdate}: TProps) {\n    // @ts-ignore\n    function onScanSuccess(decodedText, decodedResult) {\n        // handle the scanned code as you like, for example:\n        console.log(`Code matched = ${decodedText}`, decodedResult);\n    }\n\n    // @ts-ignore\n    function onScanFailure(error) {\n        // handle scan failure, usually better to ignore and keep scanning.\n        // for example:\n        console.warn(`Code scan error = ${error}`);\n    }\n\n    useEffect(() => {\n        const html5QrcodeScanner =  new Html5Qrcode(\n            \"qr-reader\");\n        Html5Qrcode.getCameras().then(devices => {\n            /**\n             * devices would be an array of objects of type:\n             * { id: \"id\", label: \"label\" }\n             */\n            if (devices && devices.length) {\n                var cameraId = devices[0].id;\n                html5QrcodeScanner.start(\n                    cameraId,     // retreived in the previous step.\n                    {\n                        fps: 10,    // sets the framerate to 10 frame per second\n                        qrbox: 250  // sets only 250 X 250 region of viewfinder to\n                                    // scannable, rest shaded.\n                    },\n                    (qrCodeMessage, result) => {\n                        onUpdate && onUpdate(qrCodeMessage, result);\n                        // do something when code is read. For example:\n                        console.log(`QR Code detected: ${qrCodeMessage}`);\n                    }, undefined)\n                    .catch(err => {\n                        // Start failed, handle it. For example,\n                        console.log(`Unable to start scanning, error: ${err}`);\n                    });\n            }\n        }).catch(err => {\n            console.error(err);\n        });\n\n        return () => {\n            html5QrcodeScanner.stop().then(ignore => {\n                // QR Code scanning is stopped.\n                console.log(\"QR Code scanning stopped.\");\n            }).catch(err => {\n                // Stop failed, handle it.\n                console.log(\"Unable to stop scanning.\");\n            });\n        }\n    })\n    return <div id=\"qr-reader\" style={{width: \"500px\"}}/>\n}\n\nexport default QRCodeScanner;","import {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport BarcodeScanner from \"./BarcodeScanner\";\nimport QRCodeScanner from \"./QRCodeScanner\";\n\n\ntype TProps = {\n    callback?: (code:string) => void\n    onClose?: () => void,\n}\nfunction ModalBarcodeScanner (props:TProps) {\n    const [code, setCode] = useState<string>(\"\");\n    return (\n        <Dialog open={true}  onClose={() => props.onClose && props.onClose()}>\n            <DialogTitle>TEST Barcode</DialogTitle>\n            <QRCodeScanner onUpdate={decodedText => setCode(decodedText)}/>\n            <DialogContent>\n                <TextField\n                    value={code}\n                    onChange={e => setCode(e.target.value ?? \"\")}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Barcode\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"standard\"\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => props.onClose && props.onClose()}>Cancel</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default ModalBarcodeScanner;","import React, {useDebugValue, useState} from 'react';\nimport './App.css';\nimport { Route, Routes} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport NavBar from \"./components/Navbar\";\nimport {useAppSelector} from \"./store\";\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\nimport {Box, SpeedDial, SpeedDialIcon} from '@mui/material';\nimport Copyright from \"./components/Copyright\";\nimport ModalBarcodeScanner from \"./components/ModalBarcodeScanner\";\n\nfunction App() {\n    const mode = useAppSelector(state => state.theme.mode);\n    const [barcodeScanner, setBarcodeScanner] = useState<boolean>(false)\n    const theme = React.useMemo(() => createTheme({\n        palette: {\n            mode,\n        },\n    }), [mode]);\n    return (\n        <ThemeProvider theme={theme}>\n            <NavBar/>\n            {barcodeScanner && <ModalBarcodeScanner onClose={() => setBarcodeScanner(!barcodeScanner)}/>}\n            {!barcodeScanner && <SpeedDial\n                onClick={() => setBarcodeScanner(!barcodeScanner)}\n                ariaLabel=\"SpeedDial basic example\"\n                sx={{ position: 'absolute', bottom: 16, right: 16 }}\n                icon={<span className=\"fa-duotone fa-barcode-read\"/>}\n            />}\n            <Box\n                component=\"main\"\n                sx={{\n                    backgroundColor: (theme) =>\n                        theme.palette.mode === 'light'\n                            ? theme.palette.grey[100]\n                            : theme.palette.grey[900],\n                    flexGrow: 1,\n                    height: '100vh',\n                    overflow: 'auto',\n                }}\n            >\n            <Routes>\n                <Route path=\"/\" element={<Home/>}/>\n            </Routes>\n            </Box>\n            <Copyright sx={{position: 'absolute', bottom: 16, left: 16 }} />\n        </ThemeProvider>\n\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import 'rsuite/dist/rsuite.min.css';\nimport 'bootstrap/dist/css/bootstrap-utilities.min.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n//import { CustomProvider } from 'rsuite';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}